import type EventManager from "@calcom/core/EventManager";
import type { createLoggerWithEventDetails } from "../../../handleNewBooking";
import type { NewTimeSlotBooking, SeatedBooking, RescheduleSeatedBookingObject, HandleSeatsResultBooking } from "../../types";
declare const ownerRescheduleSeatedBooking: (rescheduleSeatedBookingObject: RescheduleSeatedBookingObject, newTimeSlotBooking: NewTimeSlotBooking | null, seatedBooking: SeatedBooking, resultBooking: HandleSeatsResultBooking | null, eventManager: EventManager, loggerWithEventDetails: ReturnType<typeof createLoggerWithEventDetails>) => Promise<Partial<{
    user: {
        name: string | null;
        email: string;
        username: string | null;
        timeZone: string;
    } | null;
    payment: {
        data: import(".prisma/client").Prisma.JsonValue;
        id: number;
        uid: string;
        externalId: string;
        success: boolean;
        currency: string;
        bookingId: number;
        appId: string | null;
        amount: number;
        fee: number;
        refunded: boolean;
        paymentOption: import(".prisma/client").$Enums.PaymentOption | null;
    }[];
    references: {
        type: string;
        id: number;
        uid: string;
        credentialId: number | null;
        bookingId: number | null;
        meetingId: string | null;
        thirdPartyRecurringEventId: string | null;
        meetingPassword: string | null;
        meetingUrl: string | null;
        externalCalendarId: string | null;
        deleted: boolean | null;
    }[];
    attendees: {
        name: string;
        email: string;
        id: number;
        locale: string | null;
        timeZone: string;
        bookingId: number | null;
        noShow: boolean | null;
    }[];
} & {
    status: import(".prisma/client").$Enums.BookingStatus;
    id: number;
    description: string | null;
    startTime: Date;
    endTime: Date;
    metadata: import(".prisma/client").Prisma.JsonValue;
    uid: string;
    idempotencyKey: string | null;
    userId: number | null;
    userPrimaryEmail: string | null;
    eventTypeId: number | null;
    title: string;
    customInputs: import(".prisma/client").Prisma.JsonValue;
    responses: import(".prisma/client").Prisma.JsonValue;
    location: string | null;
    createdAt: Date;
    updatedAt: Date | null;
    paid: boolean;
    destinationCalendarId: number | null;
    cancellationReason: string | null;
    rejectionReason: string | null;
    dynamicEventSlugRef: string | null;
    dynamicGroupSlugRef: string | null;
    rescheduled: boolean | null;
    fromReschedule: string | null;
    recurringEventId: string | null;
    smsReminderNumber: string | null;
    scheduledJobs: string[];
    isRecorded: boolean;
    iCalUID: string | null;
    iCalSequence: number;
    rating: number | null;
    ratingFeedback: string | null;
    noShowHost: boolean | null;
    cancelledBy: string | null;
    rescheduledBy: string | null;
}> & {
    appsStatus?: import("@calcom/platform-libraries").AppsStatus[] | undefined;
    seatReferenceUid?: string | undefined;
    paymentUid?: string | undefined;
    message?: string | undefined;
    paymentId?: number | undefined;
}>;
export default ownerRescheduleSeatedBooking;
//# sourceMappingURL=ownerRescheduleSeatedBooking.d.ts.map